buildscript {
	dependencies {
		classpath 'org.postgresql:postgresql:42.2.5'
	}
}

plugins {
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.freefair.lombok' version '4.1.6'
	id 'org.flywaydb.flyway' version '6.1.3'
	id 'org.sonarqube' version '2.8'
	id 'java'
	id 'jacoco'
}

ext {
	guavaVersion = '28.1-jre'
	springR2dbcVersion = '0.1.0.BUILD-SNAPSHOT'
	r2dbcVersion = '0.8.0.RELEASE'
	nettyVersion = '4.1.39.Final'
	jjwtVersion = '0.10.7'
	jaxbApiVersion = '2.3.1'
	flywayVersion = '6.1.3'
}

group = 'org.briarheart'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation "org.springframework.boot.experimental:spring-boot-starter-data-r2dbc:$springR2dbcVersion"
	implementation 'org.springframework:spring-jdbc'
	implementation "com.google.guava:guava:$guavaVersion"
	implementation "io.netty:netty-codec-http:$nettyVersion"
	implementation "io.netty:netty-codec-http2:$nettyVersion"
	implementation "io.netty:netty-handler-proxy:$nettyVersion"
	implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
	implementation "javax.xml.bind:jaxb-api:$jaxbApiVersion"

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly "io.r2dbc:r2dbc-postgresql:$r2dbcVersion"
	runtimeOnly "org.flywaydb:flyway-core:$flywayVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testRuntimeOnly 'com.h2database:h2'
	testRuntimeOnly "io.r2dbc:r2dbc-h2:$r2dbcVersion"
}

test {
	environment 'DATABASE_URL', 'h2:mem:///testdb?options=DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE'
	useJUnitPlatform()
}
